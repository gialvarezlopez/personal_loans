{% extends 'app/base.html.twig' %}

{% block title_page %}
    New payment - Personal Loans
{% endblock %}

{% block breadcrumb %}
    {# {{ include('EmrBundle:consulta:_breadcrumb.html.twig' )  }} #}
{% endblock %} 

{% block submenutop %}
    {# {{ include('EmrBundle:consulta:_submenu.html.twig' )  }} #}
{% endblock %} 



{% block header %}
        
{% endblock %}

{% block content %}

{#  Check the notifications #}
    {% set created = 0 %}
    {% for message in app.session.flashbag().get("success") %}
        <div class="alert alert-success"><i class="fa fa-check-circle-o" aria-hidden="true"></i> {{message}}</div>
    {% endfor %}
    {% for message in app.session.flashbag().get("error") %}
        <div class="alert alert-danger"><i class="fa fa-times" aria-hidden="true"></i> {{message}} </div>
    {% endfor %}
    {# End notifications #}

<section class="content-header">
      <h1>
        New Payment
        <small></small>
      </h1>
      <ol class="breadcrumb">
        <li><a href="{{ path('dashboard_index') }}"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        <li class="active">Setting</li>
      </ol>
</section>
<hr>

        <div class="box  {# collapsed-box #}">
            <div class="box-header">
                <h3 class="box-title">{{ userData.usrEmail }}
                   {# <small>Advanced and full of features</small> #}
                </h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body pad">
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <div class="box box-success">
                            {#
                            <div class="box-header with-border">
                                <h3 class="box-title">List</h3>
                            </div>
                            #}
                            <div class="box-body">
                                <form action="{{ path('usercontrolapp_payment_create') }}" class="form-horizontal" method="post">
                                    <div class="row">
                                        <div class="col-lg-6">
                                            
                                                <input type="hidden" class="form-control" id="id" name="id" value="{{ userData.usrId }}">
                                                <div class="form-group">
                                                    <label for="inputTypePayment" class="col-sm-2 control-label">Via de pago: </label>
                                                    <div class="col-sm-10">
                                                    
                                                        <select class="form-control" id="inputTypePayment" name="inputTypePayment">
                                                            {% for item in paymentProcessor %}
                                                                <option value="{{ item.ppId }}">{{ item.ppName }}</option>
                                                            {% endfor %}
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="inputTypePricing" class="col-sm-2 control-label">Plan:</label>
                                                    <div class="col-sm-10">
                                                        <select class="form-control" id="inputTypePricing" name="inputTypePricing">
                                                            {% for item in pricing %}
                                                                <option value="{{ item.prId }}">{{ item.prPlan }} - (Meses: {{ item.prMonths }} ) - (Valor: ${{ item.prPrice }})</option>
                                                            {% endfor %}
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="inputIdTransaction" class="col-sm-2 control-label">ID Transaccion: </label>
                                                    <div class="col-sm-10">
                                                    <input type="text" class="form-control" id="inputIdTransaction" name="inputIdTransaction" placeholder="ID Transaccion">
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="inputAmountPaid" class="col-sm-2 control-label">Monto cancelado $:</label>
                                                    <div class="col-sm-10">
                                                    <input type="text" class="form-control" id="inputAmountPaid" name="inputAmountPaid" placeholder="Monto cancelado" required>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="inputMonths" class="col-sm-2 control-label"># de meses:</label>
                                                    <div class="col-sm-10">
                                                    <input type="text" class="form-control" id="inputMonths" name="inputMonths" placeholder="# de meses" required>
                                                    </div>
                                                </div>
                                                
                                                {#
                                                <div class="form-group">
                                                    <label for="inputStartDate" class="col-sm-2 control-label">Fecha de inicio: </label>
                                                    <div class="col-sm-10">
                                                    <input type="text" class="form-control" id="inputStartDate" name="inputStartDate" placeholder="Fecha de inicio">
                                                    </div>
                                                </div>
                                                #}
                                            
                                        </div>
                                    </div>
                                    <p>
                                        <ul class="list-inline">
                                            <li><button type="submit" class="btn btn-success">Create</button></li>
                                            <li><a class="btn btn-default" href="{{ path('usercontrolapp_user') }}">Return to the list</a></li>
                                            <li><a class="btn btn-default" href="{{ path('usercontrolapp_payment_history',{ id:userData.usrId  }) }}">Show payment History</a></li>
                                            
                                        </ul>    
                                    </p>
                                </form>
                            </div>
                        </div>  
                    </div>
                </div>           
            </div>
        </div>

{% endblock %}

{% block codejs %}
    <script>
        //$(document).on("ready", function(){
        $(function () {
            $("body").on("click",".btnAction",function(){
                //alert("click");
                var element = $(this);
                var cla = element.attr("class").split(" ");
                for(i=0; i < cla.length; i++)
                {
                    console.log(cla[i]);
                    item = $.trim(cla[i]);
                    switch(item)
                    {
                        case "validateToken":
                        case "activeUser":
                        case "deactivateUser":
                        case "setFreeMembership":
                            var id = element.val();
                            action = item;
                            $.confirm({
                                    title: 'Confirm!',
                                    content: 'Are you sure to set free membership?',
                                    buttons: {
                                        confirm: function () {
                                            //$.alert('Confirmed!');
                                            sendData(id, action);
                                        },
                                        cancel: function () {
                                           
                                        }
                                    }
                                });
                        break;
                    }
                }
            });
            
            function sendData(id, action) {
                var id = id;
                var routeShow = "{{ path('usercontrolapp_checkUserControlEvent') }}";
                //routeShow = routeShow.replace("PLACEHOLDER", id);
				$("#holder_loading").show();
				$.ajax({
						type: "POST",
						url: routeShow,
						data: { user_id:id, action: action},
                        dataType: "json",
						error: function (data) {
							$("#holder_loading").hide();
							$.confirm({
								icon: 'fa fa-remove',
								title: 'Error!',
								content: 'An error occurred while trying to send the request',
								type: 'red',
								typeAnimated: true,
								buttons: {
									tryAgain: {
										text: 'Try again',
										btnClass: 'btn-red',
										action: function () {
											sendData(id);
										}
									},
									close: function () {
									}
								}
							});

						},
						success: function (data) {
                            //alert(data);
                            //var content = JSON.parse(data);
                            //console.log(content)
                            //alert(data.res);
							if (data.res == "1")
							{
								
                                //$('#modalLoans').modal({backdrop: 'static', keyboard: false});
                                //$("#holderBodyModalLoand").html(data);
                                switch(action)
                                {
                                    case "setFreeMembership":
                                        $("#tr_"+id).find(".td_restingDays").html(data.days);
                                        $("#tr_"+id).find(".td_acquiredMemberships").html(data.menberships[0]["total"]);
                                        break;
                                    case "validateToken":
                                         $("#tr_"+id).find(".validateToken").closest("td").html("Validated");
                                        break;    
                                }
                                
                               

                                //var href = "{{ path('client_edit', { 'cliId': 'PLACEHOLDER' }) }}";
                                //href = href.replace("PLACEHOLDER", id);    
                                //$("body").find("#btnModalEditClient").attr("href", href);

                                $("#holder_loading").hide();
                                $.alert({
									icon: 'fa fa-check-circle',
									title: 'OK!',
									content: 'Request sent successfully <br>',
									type: 'green',
									typeAnimated: true,
								});
							} else
							{
								$("#holder_loading").hide();
								var infoError = (data);
								$.alert({
									icon: 'glyphicon glyphicon-exclamation-sign',
									title: 'Info!',
									content: 'An error occurred while trying to send the request <br>' + infoError,
									type: 'red',
									typeAnimated: true,
								});
							}
						}
					});
            }

            $("#inputStartDate").daterangepicker({
                singleDatePicker: true,
                showDropdowns: true,
                locale: {
                        format: 'YYYY-MM-DD'
                    },
                //minYear: 1901,
                //maxYear: parseInt(moment().format('YYYY'),10)
            }, function(start, end, label) {
                //var years = moment().diff(start, 'years');
                //alert("You are " + years + " years old!");
                //setNextPaymentDate();
            });
        });
    </script>
{% endblock %}        
